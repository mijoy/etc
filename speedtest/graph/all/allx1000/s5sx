pdf("s5sx.pdf")


options(digits=4)
length = c(1,10,20,30,40,50,100)
length2 = c(10,20,30,40)

time1=c(0.026170,0.025745,0.025570,0.026385,0.027380,0.026225,0.026195)
time2=c(0.026010,0.025885,0.025605,0.026700,0.026675,0.026300,0.026285)
time3=c(0.035645,0.035480,0.035320,0.036090,0.036145,0.036100,0.036030)
time4=c(0.035500,0.035610,0.035425,0.036125,0.035960,0.036390,0.035910)



tt1<- time1*1000
tt2<- time2*1000
tt3<- time3*1000
tt4<- time4*1000



fit1 = lm(tt1~length)
fit2 = lm(tt2~length)
fit3 = lm(tt3~length)
fit4 = lm(tt4~length)


layout(matrix(c(1,2,3,4,5,5),3,2, byrow=TRUE),widths=c(2,2), heights=c(3,3))
par(oma=c(1, 1, 3, 1))
par(mar=c(2,2,2,2))

#v1
pred.int1 = predict(fit1,level=.95,interval="prediction")
conf.int1 = predict(fit1,level=.95,interval="confidence")
pred.lower1 = pred.int1[,2]
pred.upper1 = pred.int1[,3]
conf.lower1 = conf.int1[,2]
conf.upper1 = conf.int1[,3]
plot(length, tt1, main = 'v1', ylab='Response time(ms)(ms)', xlab='cable length', 
ylim=c(23,29),xlim=c(-5,110),col="black", bg = "black", lty=1,pch=c(21))
abline(fit1,col="red",lwd=1)
mtext("cable length", side=1, cex=0.7)
mtext("Response time(ms)", side=2, cex=0.7)
lines(length[1:1000],conf.lower1[1:1000],lty="dashed",lwd=2,col="green")
lines(length[1:1000],conf.upper1[1:1000],lty="dashed",lwd=2,col="green")
lines(length[1:1000],pred.lower1[1:1000],lty="dashed",lwd=2,col="blue")
lines(length[1:1000],pred.upper1[1:1000],lty="dashed",lwd=2,col="blue")
text(length, tt1, labels=tt1, cex= 0.4, pos=1)
cal1=coef(fit1);cal1
a1=cal1[1]+cal1[2]*10
b1=cal1[1]+cal1[2]*20
c1=cal1[1]+cal1[2]*30
d1=cal1[1]+cal1[2]*40
v1=c(a1,b1,c1,d1)
points(10,a1,col="red", bg = "red", lty=1,pch=c(24))
points(20,b1,col="red", bg = "red", lty=1,pch=c(24))
points(30,c1,col="red", bg = "red", lty=1,pch=c(24))
points(40,d1,col="red", bg = "red", lty=1,pch=c(24))

#v2c
pred.int2 = predict(fit2,level=.95,interval="prediction")
conf.int2 = predict(fit2,level=.95,interval="confidence")
pred.lower2 = pred.int2[,2]
pred.upper2 = pred.int2[,3]
conf.lower2 = conf.int2[,2]
conf.upper2 = conf.int2[,3]
plot(length, tt2, main = 'v2c', ylab='Response time(ms)(ms)', xlab='cable length', 
ylim=c(23,29),xlim=c(-5,110),col="black", bg = "black", lty=1,pch=c(21))
abline(fit2,col="red",lwd=1)
mtext("cable length", side=1, cex=0.7)
mtext("Response time(ms)", side=2, cex=0.7)
lines(length[1:1000],conf.lower2[1:1000],lty="dashed",lwd=2,col="green")
lines(length[1:1000],conf.upper2[1:1000],lty="dashed",lwd=2,col="green")
lines(length[1:1000],pred.lower2[1:1000],lty="dashed",lwd=2,col="blue")
lines(length[1:1000],pred.upper2[1:1000],lty="dashed",lwd=2,col="blue")
text(length, tt2, labels=tt2, cex= 0.4, pos=1)
cal2=coef(fit2);cal2
a2=cal2[1]+cal2[2]*10
b2=cal2[1]+cal2[2]*20
c2=cal2[1]+cal2[2]*30
d2=cal2[1]+cal2[2]*40
v2c=c(a2,b2,c2,d2)
points(10,a2,col="red", bg = "red", lty=1,pch=c(24))
points(20,b2,col="red", bg = "red", lty=1,pch=c(24))
points(30,c2,col="red", bg = "red", lty=1,pch=c(24))
points(40,d2,col="red", bg = "red", lty=1,pch=c(24))



#v3r
pred.int3 = predict(fit3,level=.95,interval="prediction")
conf.int3 = predict(fit3,level=.95,interval="confidence")
pred.lower3 = pred.int3[,2]
pred.upper3 = pred.int3[,3]
conf.lower3 = conf.int3[,2]
conf.upper3 = conf.int3[,3]
plot(length, tt3, main = 'v3r', ylab='Response time(ms)(ms)', xlab='cable length', 
ylim=c(33,39),xlim=c(-5,110),col="black", bg = "black", lty=1,pch=c(21))
abline(fit3,col="red",lwd=1)
mtext("cable length", side=1, cex=0.7)
mtext("Response time(ms)", side=2, cex=0.7)
lines(length[1:1000],conf.lower3[1:1000],lty="dashed",lwd=2,col="green")
lines(length[1:1000],conf.upper3[1:1000],lty="dashed",lwd=2,col="green")
lines(length[1:1000],pred.lower3[1:1000],lty="dashed",lwd=2,col="blue")
lines(length[1:1000],pred.upper3[1:1000],lty="dashed",lwd=2,col="blue")
text(length, tt3, labels=tt3, cex= 0.4, pos=1)
cal3=coef(fit3);cal3
a3=cal3[1]+cal3[2]*10
b3=cal3[1]+cal3[2]*20
c3=cal3[1]+cal3[2]*30
d3=cal3[1]+cal3[2]*40
v3r=c(a3,b3,c3,d3)
points(10,a3,col="red", bg = "red", lty=1,pch=c(24))
points(20,b3,col="red", bg = "red", lty=1,pch=c(24))
points(30,c3,col="red", bg = "red", lty=1,pch=c(24))
points(40,d3,col="red", bg = "red", lty=1,pch=c(24))


#v3w
pred.int4 = predict(fit4,level=.95,interval="prediction")
conf.int4 = predict(fit4,level=.95,interval="confidence")
pred.lower4 = pred.int4[,2]
pred.upper4 = pred.int4[,3]
conf.lower4 = conf.int4[,2]
conf.upper4 = conf.int4[,3]
plot(length, tt4, main = 'v3w', ylab='Response time(ms)(ms)', xlab='cable length', 
ylim=c(33,39),xlim=c(-5,110),col="black", bg = "black", lty=1,pch=c(21))
abline(fit4,col="red",lwd=1)
mtext("cable length", side=1, cex=0.7)
mtext("Response time(ms)", side=2, cex=0.7)
lines(length[1:1000],conf.lower4[1:1000],lty="dashed",lwd=2,col="green")
lines(length[1:1000],conf.upper4[1:1000],lty="dashed",lwd=2,col="green")
lines(length[1:1000],pred.lower4[1:1000],lty="dashed",lwd=2,col="blue")
lines(length[1:1000],pred.upper4[1:1000],lty="dashed",lwd=2,col="blue")
text(length, tt4, labels=tt4, cex= 0.4, pos=1)
cal4=coef(fit4);cal4
a4=cal4[1]+cal4[2]*10
b4=cal4[1]+cal4[2]*20
c4=cal4[1]+cal4[2]*30
d4=cal4[1]+cal4[2]*40
v3w=c(a4,b4,c4,d4)
points(10,a4,col="red", bg = "red", lty=1,pch=c(24))
points(20,b4,col="red", bg = "red", lty=1,pch=c(24))
points(30,c4,col="red", bg = "red", lty=1,pch=c(24))
points(40,d4,col="red", bg = "red", lty=1,pch=c(24))


plot(1, type = "n", axes=FALSE, xlab="", ylab="")
legend(x = "bottom",inset = 0, legend = c("linear fit","confidence limits","prediction limits","data","prediction value"), col=c("red","green","blue","black","red"),lwd=1, lty=c(1,2,2,NA,NA), pch=c(NA,NA,NA,16,17), cex=1, horiz = TRUE, merge=FALSE)



title("switch5/sleepx",side=3, line=1, cex=2,outer=TRUE)






dev.off()


